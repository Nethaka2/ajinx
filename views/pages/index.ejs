<!DOCTYPE html>
<html lang="en">

<head>
    <title>Ajinx</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
    <link href='https://unpkg.com/boxicons@2.1.1/css/boxicons.min.css' rel='stylesheet'>
  <link rel="icon" type="image/x-icon" href="https://cdn.glitch.global/ccc8c57f-ca9f-4e50-aded-b843a7073956/WhatsApp%20Image%202022-12-28%20at%2013.06.30.jpeg?v=1672231302406">
</head>
<%- include('../partials/essential') %>
<body>

	<div class="chatbox-message-wrapper">
		<div class="chatbox-message-header">
			<div class="chatbox-message-profile">
				<img src="https://images.unsplash.com/photo-1570295999919-56ceb5ecca61?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8bWFufGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=500&q=60"
					alt="" class="chatbox-message-image">
				<div>
					<h4 class="chatbox-message-name">Ejax</h4>
					<p class="chatbox-message-status">Online helper</p>
				</div>
			</div>
			<div class="chatbox-message-dropdown">
				<i class='bx bx-dots-vertical-rounded chatbox-message-dropdown-toggle'></i>
				<ul class="chatbox-message-dropdown-menu">
					<li>
						<a href="#">Search</a>
					</li>
					<li>
						<a href="#">Report</a>
					</li>
				</ul>
			</div>
		</div>
		<div class="chatbox-message-content">
			<div class="chatbox-message-item received">
				<span class="chatbox-message-item-text">
					Hi there, I'm Ejax and you?
				</span>
				<span class="chatbox-message-item-time">08:30</span>
			</div>
			<!-- <div class="chatbox-message-item received">
					<span class="chatbox-message-item-text">
						Lorem, ipsum, dolor sit amet consectetur adipisicing elit. Quod, fugiat?
					</span>
					<span class="chatbox-message-item-time">08:30</span>
				</div> -->
		</div>
		<div class="chatbox-message-bottom">
			<form action="#" class="chatbox-message-form">
				<textarea rows="1" placeholder="Type message..." class="chatbox-message-input"></textarea>
				<button type="submit" class="chatbox-message-submit"><i class='bx bx-send'></i></button>
			</form>
		</div>
	</div>
</body>
<style>
	@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');

	b {
		text-transform: capitalize;
	}

	/* Box sizing rules */
	*,
	*::before,
	*::after {
		box-sizing: border-box;
	}

	/* Remove default margin */
	body,
	h1,
	h2,
	h3,
	h4,
	p,
	figure,
	blockquote,
	dl,
	dd {
		margin: 0;
	}

	/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
	ul[role='list'],
	ol[role='list'] {
		list-style: none;
	}

	/* Set core root defaults */
	html:focus-within {
		scroll-behavior: smooth;
	}

	/* Set core body defaults */
	body {
		min-height: 100vh;
		text-rendering: optimizeSpeed;
		line-height: 1.5;
		font-family: 'Poppins', sans-serif;
		background: linear-gradient(90deg, var(--grey) 31px, transparent 1px) 50%, linear-gradient(180deg, var(--grey) 31px, var(--blue) 1px) 50%;
		background-size: 32px 32px;
		color: var(--dark);
		width: 100%;
		display: flex;
		align-items: center;
		justify-content: center;
	}

	/* A elements that don't have a class get default styles */
	a:not([class]) {
		text-decoration-skip-ink: auto;
	}

	/* Make images easier to work with */
	img,
	picture {
		max-width: 100%;
		display: block;
	}

	/* Inherit fonts for inputs and buttons */
	input,
	button,
	textarea,
	select {
		font: inherit;
	}

	/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
	@media (prefers-reduced-motion: reduce) {
		html:focus-within {
			scroll-behavior: auto;
		}

		*,
		*::before,
		*::after {
			animation-duration: 0.01ms !important;
			animation-iteration-count: 1 !important;
			transition-duration: 0.01ms !important;
			scroll-behavior: auto !important;
			transition: .4s;
		}
	}

	/* GLOBAL STYLES */
	:root {
		--blue: #335DFF;
		--grey: #F5F5F5;
		--grey-d-1: #EEE;
		--grey-d-2: #DDD;
		--grey-d-3: #888;
		--white: #FFF;
		--dark: #222;
	}

	/* GLOBAL STYLES */







	/* CHATBOX */
	.chatbox-wrapper {
		position: fixed;
		bottom: 2rem;
		right: 2rem;
		width: 4rem;
		height: 4rem;
	}

	.chatbox-toggle {
		width: 100%;
		height: 100%;
		background: var(--blue);
		color: var(--white);
		font-size: 2rem;
		display: flex;
		justify-content: center;
		align-items: center;
		border-radius: 50%;
		cursor: pointer;
		transition: .2s;
	}

	.chatbox-toggle:active {
		transform: scale(.9);
	}

	.chatbox-message-wrapper {
		position: absolute;
		width: 420px;
		border-radius: .5rem;
		overflow: hidden;
		box-shadow: .5rem .5rem 2rem rgba(0, 0, 0, .1);
		transform: scale(1);
		transform-origin: bottom right;
		transition: .2s;
	}

	.chatbox-message-header {
		display: flex;
		align-items: center;
		justify-content: space-between;
		background: var(--white);
		padding: .75rem 1.5rem;
	}

	.chatbox-message-profile {
		display: flex;
		align-items: center;
		grid-gap: .5rem;
	}

	.chatbox-message-image {
		width: 3rem;
		height: 3rem;
		object-fit: cover;
		border-radius: 50%;
	}

	.chatbox-message-name {
		font-size: 1.125rem;
		font-weight: 600;
	}

	.chatbox-message-status {
		font-size: .875rem;
		color: var(--grey-d-3);
	}

	.chatbox-message-dropdown {
		position: relative;
	}

	.chatbox-message-dropdown-toggle {
		display: flex;
		justify-content: center;
		align-items: center;
		width: 2.5rem;
		height: 2.5rem;
		font-size: 1.25rem;
		cursor: pointer;
		border-radius: 50%;
	}

	.chatbox-message-dropdown-toggle:hover {
		background: var(--grey);
	}

	.chatbox-message-dropdown-menu {
		list-style: none;
		margin: 0;
		position: absolute;
		top: 100%;
		right: 0;
		background: var(--white);
		padding: .5rem 0;
		width: 120px;
		box-shadow: .25rem .25rem 1.5rem rgba(0, 0, 0, .1);
		transform: scale(0);
		transform-origin: top right;
		transition: .2s;
		border-radius: .5rem;
	}

	.chatbox-message-dropdown-menu.show {
		transform: scale(1);
	}

	.chatbox-message-dropdown-menu a {
		font-size: .875rem;
		font-weight: 500;
		color: var(--dark);
		text-decoration: none;
		padding: .5rem 1rem;
		display: block;
	}

	.chatbox-message-dropdown-menu a:hover {
		background: var(--grey);
	}

	.chatbox-message-content {
		background: var(--grey);
		padding: 1.5rem;
		display: flex;
		flex-direction: column;
		grid-row-gap: 1rem;
		max-height: 300px;
		overflow-y: auto;
	}

	.chatbox-message-item {
		width: 90%;
		padding: 1rem;
	}

	.chatbox-message-item button {
		background: transparent;
		border: 2px solid #335dff;
		border-radius: 5px;
		cursor: pointer;
		height: 40px;
		width: 47%;
	}

	.chatbox-message-item button:hover {
		background: #335dff;
		color: #fff;
	}

	.chatbox-message-item.sent {
		align-self: flex-end;
		background: var(--blue);
		color: var(--white);
		border-radius: .75rem 0 .75rem .75rem;
	}

	.chatbox-message-item.received {
		background: var(--white);
		border-radius: 0 .75rem .75rem .75rem;
		box-shadow: .25rem .25rem 1.5rem rgba(0, 0, 0, .05);
	}

	.chatbox-message-item-time {
		float: right;
		font-size: .75rem;
		margin-top: .5rem;
		display: inline-block;
	}

	.chatbox-message-bottom {
		background: var(--white);
		padding: .75rem 1.5rem;
	}

	.chatbox-message-form {
		display: flex;
		align-items: center;
		background: var(--grey);
		border-radius: .5rem;
		padding: .5rem 1.25rem;
	}

	.chatbox-message-input {
		background: transparent;
		outline: none;
		border: none;
		resize: none;
		scrollbar-width: none;
	}

	.chatbox-message-input::-webkit-scrollbar {
		display: none;
	}

	.chatbox-message-submit {
		font-size: 1.25rem;
		color: var(--blue);
		background: transparent;
		border: none;
		outline: none;
		cursor: pointer;
	}

	.chatbox-message-no-message {
		font-size: 1rem;
		font-weight: 600;
		text-align: center;
	}

	/* CHATBOX */







	/* BREAKPOINTS */
	@media screen and (max-width: 576px) {
		.chatbox-message-wrapper {
			width: calc(100vw - 2rem);
		}

		.chatbox-wrapper {
			bottom: 1rem;
			right: 1rem;
		}
	}

	/* BREAKPOINTS */
</style>
<script>

	window.localStorage.setItem('step', '1')
	window.localStorage.setItem('ifRedirect', 'false')
	// MESSAGE INPUT
	const textarea = document.querySelector('.chatbox-message-input')
	const chatboxForm = document.querySelector('.chatbox-message-form')

	textarea.addEventListener('input', function () {
		let line = textarea.value.split('\n').length

		if (textarea.rows < 6 || line < 6) {
			textarea.rows = line
		}

		if (textarea.rows > 1) {
			chatboxForm.style.alignItems = 'flex-end'
		} else {
			chatboxForm.style.alignItems = 'center'
		}
	})





	// DROPDOWN TOGGLE
	const dropdownToggle = document.querySelector('.chatbox-message-dropdown-toggle')
	const dropdownMenu = document.querySelector('.chatbox-message-dropdown-menu')

	dropdownToggle.addEventListener('click', function () {
		dropdownMenu.classList.toggle('show')
	})

	document.addEventListener('click', function (e) {
		if (!e.target.matches('.chatbox-message-dropdown, .chatbox-message-dropdown *')) {
			dropdownMenu.classList.remove('show')
		}
	})







	// CHATBOX MESSAGE
	const chatboxMessageWrapper = document.querySelector('.chatbox-message-content')
	const chatboxNoMessage = document.querySelector('.chatbox-message-no-message')

	chatboxForm.addEventListener('submit', function (e) {
		e.preventDefault()

		if (isValid(textarea.value)) {
			writeMessage()
			setTimeout(autoReply, 1000)
		}
	})



	function addZero(num) {
		return num < 10 ? '0' + num : num
	}

	document.querySelector('chatbox-message-form textarea').addEventListener('enter', function(event){
        if (event.key == "Enter"){
            event.preventDefault();
            document.querySelector('chatbox-message-submit').click();
        }
    });
	function writeMessage() {
		const today = new Date()
		let message = `
		<div class="chatbox-message-item sent">
			<span class="chatbox-message-item-text">
				${textarea.value.trim().replace(/\n/g, '<br>\n')}
			</span>
			<span class="chatbox-message-item-time">${addZero(today.getHours())}:${addZero(today.getMinutes())}</span>
		</div>
	`
		chatboxMessageWrapper.insertAdjacentHTML('beforeend', message)
		chatboxForm.style.alignItems = 'center'
		textarea.rows = 1
		textarea.focus()
		window.localStorage.setItem('var', textarea.value)
		console.log(window.localStorage.getItem('var'))
		scrollBottom()
		textarea.value = ''
	}

	function sentAccess(){
		window.location.href = "/room";
        return false;
	}

	function autoReply() {
		const today = new Date()
		if (window.localStorage.getItem('step') == '1') {
			let message = `
		<div class="chatbox-message-item received">
			<span class="chatbox-message-item-text">
				Nice to meet you <b>${window.localStorage.getItem('var')}</b><br>
				<br>
				Now you can create a room :)<br>
				Suggest a name for your <i>Room</i>.
			</span>
			<span class="chatbox-message-item-time">${addZero(today.getHours())}:${addZero(today.getMinutes())}</span>
		</div>
	`
			window.localStorage.setItem('step', '2')
			chatboxMessageWrapper.insertAdjacentHTML('beforeend', message)
			window.localStorage.setItem('username', window.localStorage.getItem('var'))
			scrollBottom()
		}
		else if (window.localStorage.getItem('step') == '2') {
			let message = `
		<div class="chatbox-message-item received">
			<span class="chatbox-message-item-text">
				Your room <b>${window.localStorage.getItem('var')}</b> has been created successfully.<br>
				<br>
				But your <i>Room</i> not secured yet.<br>
				Make a strong pin <b>****</b>
			</span>
			<span class="chatbox-message-item-time">${addZero(today.getHours())}:${addZero(today.getMinutes())}</span>
		</div>
	`
			window.localStorage.setItem('step', '3')
			chatboxMessageWrapper.insertAdjacentHTML('beforeend', message)
			window.localStorage.setItem('roomname', window.localStorage.getItem('var'))
			scrollBottom()
		}
		else if (window.localStorage.getItem('step') == '3') {
			let message = `
		<div class="chatbox-message-item received">
			<span class="chatbox-message-item-text">
				Is that <b>${window.localStorage.getItem('var')}</b> the pin for your Room.<br>
				<br>
				<button style="margin-right:6%;" onclick="answer(this.innerText)">Yes</button><button onclick="answer(this.innerText)">No</button>
			</span>
			<span class="chatbox-message-item-time">${addZero(today.getHours())}:${addZero(today.getMinutes())}</span>
		</div>
	`
			window.localStorage.setItem('step', '4')
			chatboxMessageWrapper.insertAdjacentHTML('beforeend', message)
			window.localStorage.setItem('passcode', window.localStorage.getItem('var'))
			scrollBottom()
		}
		else if (window.localStorage.getItem('step') == '4') {

			if (window.localStorage.getItem('data') == 'Yes'){
				let message = `
		<div class="chatbox-message-item received">
			<span class="chatbox-message-item-text">
				Please wait...<br>
				You'll be redirected :)
			</span>
			<span class="chatbox-message-item-time">${addZero(today.getHours())}:${addZero(today.getMinutes())}</span>
		</div>
	`
			window.localStorage.setItem('step', 'finished')
			chatboxMessageWrapper.insertAdjacentHTML('beforeend', message)
			scrollBottom()
			setTimeout(sentAccess, 1000)
			}else{
				let message = `
		<div class="chatbox-message-item received">
			<span class="chatbox-message-item-text">
				What's wrong with !!!<br>
				<button style="width:100%;margin-bottom:10px;margin-top:10px;" onclick="window.location.reload();window.localStorage.setItem('ifRedirect', 'false');">Reset All</button>
				<button style="width:100%;margin-bottom:10px;" onclick="answers(this.innerText);window.localStorage.setItem('ifRedirect', 'false');">No,thanks</button>
			</span>
			<span class="chatbox-message-item-time">${addZero(today.getHours())}:${addZero(today.getMinutes())}</span>
		</div>
	`
			window.localStorage.setItem('step', 'check')
			chatboxMessageWrapper.insertAdjacentHTML('beforeend', message)
			scrollBottom()
			}
		}
		else if (window.localStorage.getItem('step') == 'check') {
			let message = `
		<div class="chatbox-message-item received">
			<span class="chatbox-message-item-text">
				Please wait...<br>
				You'll be redirected :)
			</span>
			<span class="chatbox-message-item-time">${addZero(today.getHours())}:${addZero(today.getMinutes())}</span>
		</div>
	`
			chatboxMessageWrapper.insertAdjacentHTML('beforeend', message)
			scrollBottom()
			setTimeout(sentAccess, 1000)
		}
		else {
			let message = `
		<div class="chatbox-message-item received">
			<span class="chatbox-message-item-text">
				Unknown Errorrrrr :( <br>
				Please check your Internet Connection.
			</span>
			<span class="chatbox-message-item-time">Error</span>
		</div>
	`
			window.localStorage.setItem('step', 'error')
			chatboxMessageWrapper.insertAdjacentHTML('beforeend', message)
			scrollBottom()
		}

	}

	function answer(data) {
		if (window.localStorage.getItem('ifRedirect') == 'false') {
			window.localStorage.setItem('data',data)
			const today = new Date()
			let message = `
		<div class="chatbox-message-item sent">
			<span class="chatbox-message-item-text">
				${data}
			</span>
			<span class="chatbox-message-item-time">${addZero(today.getHours())}:${addZero(today.getMinutes())}</span>
		</div>
	`
			chatboxMessageWrapper.insertAdjacentHTML('beforeend', message)
			chatboxForm.style.alignItems = 'center'
			textarea.rows = 1
			textarea.focus()
			window.localStorage.setItem('ifRedirect', 'true')
			window.localStorage.setItem('step', '4')
			setTimeout(autoReply, 1000)
			scrollBottom()
			textarea.value = ''
		}
	}
	function answers(data) {
		if (window.localStorage.getItem('ifRedirect') == 'false') {
			const today = new Date()
			let message = `
		<div class="chatbox-message-item sent">
			<span class="chatbox-message-item-text">
				No,thanks<br>
				Please Redirect
			</span>
			<span class="chatbox-message-item-time">${addZero(today.getHours())}:${addZero(today.getMinutes())}</span>
		</div>
	`
	window.localStorage.setItem('step', 'check')
			chatboxMessageWrapper.insertAdjacentHTML('beforeend', message)
			chatboxForm.style.alignItems = 'center'
			window.localStorage.setItem('ifRedirect', 'true')
			textarea.rows = 1
			textarea.focus()
			setTimeout(autoReply, 1000)
			scrollBottom()
			textarea.value = ''
	}
}
	function scrollBottom() {
		chatboxMessageWrapper.scrollTo(0, chatboxMessageWrapper.scrollHeight)
	}

	function isValid(value) {
		let text = value.replace(/\n/g, '')
		text = text.replace(/\s/g, '')

		return text.length > 0
	}
</script>

</html>